#!/bin/bash

# custom terminal colors
RED="\[\033[0;31m\]"
YELLOW="\[\033[0;33m\]"
GREEN="\[\033[0;32m\]"
LIGHT_CYAN="\[\033[1;36m\]"
BLUE="\[\033[0;34m\]"
LIGHT_RED="\[\033[1;31m\]"
LIGHT_GREEN="\[\033[1;32m\]"
WHITE="\[\033[0;37m\]"
LIGHT_GRAY="\[\033[1;37m\]"
COLOR_NONE="\[\e[0m\]"

function parse_git_branch {
    git rev-parse --git-dir > /dev/null 2>&1

    if [ $? -eq 0 ]; then
        git_status="$(git status 2> /dev/null)"
        branch_pattern="On branch ([^${IFS}]*)"
        not_staged_pattern="Changes not staged for commit"
        untracked_pattern="Untracked files:"
        detached_branch_pattern="# Not currently on any branch"
        remote_pattern="Your branch is (.*) of"
        up_to_date_pattern="Your branch is up-to-date"
        diverge_pattern="Your branch and (.*) have diverged"
        new_pattern="new file:"

        if [[ ${git_status}} =~ ${not_staged_pattern} ]]; then
            state="✔"
        fi

        if [[ ${git_status} =~ ${remote_pattern} ]]; then
            remote="↑"
        elif [[ ${git_status} =~ ${up_to_date_pattern} ]]; then
            remote="up-to-date"
        else
            remote="↓"
        fi

        #new files
        if [[ ${git_status} =~ ${new_pattern} ]]; then
            remote="+"
        fi

        #untracked files
        if [[ ${git_status} =~ ${untracked_pattern} ]]; then
            remote="✖"
        fi

        #diverged branch
        if [[ ${git_status} =~ ${diverge_pattern} ]]; then
            remote="↕"
        fi

        #branch name
        if [[ ${git_status} =~ ${branch_pattern} ]]; then
            branch=${BASH_REMATCH[1]}

        #detached branch
        elif [[ ${git_status} =~ ${detached_branch_pattern} ]]; then
            branch="NO BRANCH"
        fi

        echo "(on ${branch} ${remote} ${state})"
    fi
    return
}

export PS1="[$GREEN\d $GREEN\A] $RED[\w] $YELLOW\$(parse_git_branch)$WHITE\n..."
export PROMPT_COMMAND='echo -ne "\033]0;${PWD/#$HOME/~}\007"'
